<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.inspur.gcloud.mc.core.dao.EnvelopeDao">

	<select id="findEnvelopeByMessageIdAndLoginId" parameterType="map" resultType="com.inspur.gcloud.mc.core.data.Envelope">
		SELECT 
			ID, MESSAGE_ID, MESSAGE_TYPE, RELATED_MESSAGE_ID, RELATED_PATH, SENDER_ID, RECEIVER_ID, RECEIVE_STATE, 
			SEND_STATE, IS_SCHEDULE, IS_READ_RECEIPT, HAS_RECEIPT, SEND_TYPE, RECEIVER_TYPE, SEND_LEVEL, SEND_TIME, 
			READ_TIME, CREATE_TIME, UPDATE_TIME, REMARK, SENDER_NAME, RECEIVER_NAME
		FROM 
			MC_ENVELOPE 
		<where>
			MESSAGE_ID = #{messageId}
			<if test="boxType == 'instationMsgIn'.toString() ">
				AND RECEIVER_ID = #{loginId}
			</if>
			<if test="boxType == 'instationMsgDraft'.toString() ">
				AND SENDER_ID = #{loginId}
			</if>
			<if test="boxType == 'instationMsgOut'.toString() ">
				AND SENDER_ID = #{loginId}
			</if>
			<if test="boxType == 'instationMsgScrap'.toString() ">
				AND (SENDER_ID = #{loginId} OR RECEIVER_ID = #{loginId})
			</if>
		</where>
	</select>
	
	<select id="findEnvelopeListByMessageIdAndLoginId" parameterType="map" resultType="com.inspur.gcloud.mc.core.data.Envelope">
		SELECT 
			ID, MESSAGE_ID, MESSAGE_TYPE, RELATED_MESSAGE_ID, RELATED_PATH, SENDER_ID, RECEIVER_ID, RECEIVE_STATE, 
			SEND_STATE, IS_SCHEDULE, IS_READ_RECEIPT, HAS_RECEIPT, SEND_TYPE, RECEIVER_TYPE, SEND_LEVEL, SEND_TIME, 
			READ_TIME, CREATE_TIME, UPDATE_TIME, REMARK, SENDER_NAME, RECEIVER_NAME
		FROM 
			MC_ENVELOPE 
		<where>
			MESSAGE_ID = #{messageId}
			<if test="boxType == 'instationMsgIn'.toString() ">
				AND RECEIVER_ID = #{loginId}
			</if>
			<if test="boxType == 'instationMsgDraft'.toString() ">
				AND SENDER_ID = #{loginId}
			</if>
			<if test="boxType == 'instationMsgOut'.toString() ">
				AND SENDER_ID = #{loginId}
			</if>
			<if test="boxType == 'instationMsgScrap'.toString() ">
				AND (SENDER_ID = #{loginId} OR RECEIVER_ID = #{loginId})
			</if>
		</where>	
	</select>
	
	<select id="findEnvelopeListByMessageId" parameterType="string" resultType="com.inspur.gcloud.mc.core.data.Envelope">
		SELECT 
			ID, MESSAGE_ID, MESSAGE_TYPE, RELATED_MESSAGE_ID, RELATED_PATH, SENDER_ID, RECEIVER_ID, RECEIVE_STATE, 
			SEND_STATE, IS_SCHEDULE, IS_READ_RECEIPT, HAS_RECEIPT, SEND_TYPE, RECEIVER_TYPE, SEND_LEVEL, SEND_TIME, 
			READ_TIME, CREATE_TIME, UPDATE_TIME, REMARK, SENDER_NAME, RECEIVER_NAME
		FROM 
			MC_ENVELOPE 
		<where>
			MESSAGE_ID = #{messageId}
		</where>
	</select>

    <resultMap type="com.inspur.gcloud.mc.core.data.Envelope" id="envelopeResultMap">
    	<id property="id" column="id" />
        <collection property="message" column="message_id" select="com.inspur.gcloud.mc.core.dao.MessageDao.getMessageById" ></collection>
    </resultMap>
    
	<!-- 通过databaseId指定数据库的类型 -->
     <select id="findList" resultMap="envelopeResultMap" parameterType="map">
        SELECT 
            ID,
            MESSAGE_ID,
            MESSAGE_TYPE,
            RELATED_MESSAGE_ID,
            RELATED_PATH,
            SENDER_ID,
            SENDER_NAME,
            RECEIVER_ID,
            RECEIVER_NAME,
            RECEIVE_STATE,
            SEND_STATE,
            IS_SCHEDULE,
            IS_READ_RECEIPT,
            HAS_RECEIPT,
            SEND_TYPE,
            RECEIVER_TYPE,
            SEND_LEVEL,
            SEND_TIME,
            READ_TIME,
            CREATE_TIME,
            UPDATE_TIME,
            REMARK
        FROM MC_ENVELOPE
        <where>
        	<if test="messageType != null and messageType != '' ">
			 	MESSAGE_TYPE = '${messageType}'
			</if>
			<if test="receiverId != null and receiverId != '' ">
			 	AND RECEIVER_ID = '${receiverId}'
			</if>
			<if test="senderId != null and senderId != '' ">
			 	AND SENDER_ID = '${senderId}'
			</if>
			<if test="senderName != null and senderName != '' ">
				AND SENDER_NAME = '${senderName}'
			</if>
			<if test="isSended != null and isSended != '' ">
				AND SEND_STATE = '${isSended}'
			</if>
			<if test="(isRead != null and isRead != '' )
				and (isNotRead != null and isNotRead != '' )">
				AND (RECEIVE_STATE = '${isRead}' OR RECEIVE_STATE = '${isNotRead}')
			</if>
			<if test="isNotSended != null and isNotSended != '' ">
				AND SEND_STATE = '${isNotSended}'
			</if>
			<if test="isScrap != null and isScrap != '' ">
				AND ((SEND_STATE = '${isScrap}' AND SENDER_ID = '${loginId}') 
				OR (RECEIVE_STATE = '${isScrap}' AND RECEIVER_ID = '${loginId}'))
			</if>
        </where>
        <if test="groupfield != null">
        	GROUP BY MESSAGE_ID
        </if>
        ORDER BY SEND_TIME DESC
    </select>
	
	<select id="getByParams" parameterType="map" resultMap="envelopeResultMap">
		SELECT
	        E.MESSAGE_ID,
	        E.MESSAGE_TYPE,
	        E.RELATED_MESSAGE_ID,
	        E.RELATED_PATH,
	        E.SENDER_ID,
	        E.SENDER_NAME,
	        E.RECEIVER_ID,
	        E.RECEIVER_NAME,
	        E.RECEIVE_STATE,
	        E.SEND_STATE,
	        E.IS_SCHEDULE,
	        E.IS_READ_RECEIPT,
	        E.HAS_RECEIPT,
	        E.SEND_TYPE,
	        E.RECEIVER_TYPE,
	        E.SEND_LEVEL,
	        E.SEND_TIME,
	        E.READ_TIME,
	        E.CREATE_TIME,
	        E.UPDATE_TIME,
			M.ID,
			M.MESSAGE_LEVEL,
			M.MESSAGE_TOPIC,
			M.MESSAGE_CONTENT,
			M.REMARK
		FROM MC_ENVELOPE AS E,MC_MESSAGE AS M
		<where>
			E.MESSAGE_ID=M.ID
			<if test="senderId != null and senderId != '' ">
			 	AND E.SENDER_ID LIKE '%${senderId}%'
			</if>
			<if test="receiverId != null and receiverId != '' ">
			 	AND E.RECEIVER_ID LIKE '%${receiverId}%'
			</if>
			<if test="senderName != null and senderName != '' ">
			 	AND E.SENDER_NAME LIKE '%${senderName}%'
			</if>
			<if test="receiverName != null and receiverName != '' ">
			 	AND E.RECEIVER_NAME LIKE '%${receiverName}%'
			</if>
			<if test="sendState != null and sendState != '' ">
				AND E.SEND_STATE LIKE '%${sendState}%'
			</if>
			<if test="messageType != null and messageType != '' ">
				AND E.MESSAGE_TYPE = '${messageType}'
			</if>
			<if test="messageTopic != null and messageTopic != '' ">
				AND M.MESSAGE_TOPIC LIKE '%${messageTopic}%'
			</if>
			<if test="isSended != null and isSended != '' ">
				AND e.SEND_STATE = '${isSended}'
			</if>
			<if test="isRead != null and isRead != '' and (isNotRead == null or isNotRead == '' )">
				AND e.RECEIVE_STATE = '${isRead}' 
			</if>
			<if test="isNotRead != null and isNotRead != '' and (isRead == null or isRead == '')">
				AND e.RECEIVE_STATE = '${isNotRead}'
			</if>
			<if test="(isRead != null and isRead != '' )
				and (isNotRead != null and isNotRead != '' )">
				AND (RECEIVE_STATE = '${isRead}' OR RECEIVE_STATE = '${isNotRead}')
			</if>
			<if test="isNotSended != null and isNotSended != '' ">
				AND e.SEND_STATE = '${isNotSended}'
			</if>
			<if test="isScrap != null and isScrap != '' ">
				AND ((e.SEND_STATE = '${isScrap}' AND e.SENDER_ID = '${loginId}') 
				OR (e.RECEIVE_STATE = '${isScrap}' AND e.RECEIVER_ID = '${loginId}'))
			</if>
			<if test="sendTimeFrom != null and sendTimeFrom != '' 
					and sendTimeTo != null and sendTimeTo != '' ">
				and e.create_time between '${sendTimeFrom}' and '${sendTimeTo}'
			</if>
		</where>
		<if test="groupfield != null">
        	GROUP BY MESSAGE_ID
        </if>
        ORDER BY SEND_TIME DESC
	</select>
	
	<select id="getMessageId" parameterType="string" resultType="string">
		SELECT MESSAGE_ID FROM MC_ENVELOPE WHERE id = #{id}
	</select>
	
	<update id="changeState" parameterType="map">
		UPDATE MC_ENVELOPE 
		<set>
			<if test="boxType == 'instationMsgDraft'.toString() or boxType == 'instationMsgOut'.toString() ">
				SEND_STATE = '2'
			</if>
			<if test="boxType == 'instationMsgIn'.toString() ">
				RECEIVE_STATE = '2'
			</if>
			<if test="boxType == 'instationMsgScrap'.toString() ">
				SEND_STATE = '3',RECEIVE_STATE = '3'
			</if>
		</set>
		<where>
			id = '${id}'
		</where>
	</update>

</mapper>