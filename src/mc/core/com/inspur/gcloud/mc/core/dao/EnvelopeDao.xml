<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.inspur.gcloud.mc.core.dao.EnvelopeDao">

	<select id="findEnvelopeListByMessageId" parameterType="string" resultType="com.inspur.gcloud.mc.core.data.Envelope">
		SELECT ID, MESSAGE_ID, MESSAGE_TYPE, RELATED_MESSAGE_ID, RELATED_PATH, SENDER_ID, RECEIVER_ID, RECEIVE_STATE, SEND_STATE, IS_SCHEDULE, IS_READ_RECEIPT, HAS_RECEIPT, SEND_TYPE, RECEIVER_TYPE, SEND_LEVEL, SEND_TIME, READ_TIME, CREATE_TIME, UPDATE_TIME, REMARK, SENDER_NAME, RECEIVER_NAME
		FROM MC_ENVELOPE 
		WHERE MESSAGE_ID = #{messageId}
	</select>

    <resultMap type="com.inspur.gcloud.mc.core.data.Envelope" id="envelopeResultMap">
    	<id property="id" column="id" />
        <collection property="message" column="message_id" select="com.inspur.gcloud.mc.core.dao.MessageDao.getMessageById" ></collection>
    </resultMap>
    
	<!-- 通过databaseId指定数据库的类型 -->
     <select id="findList" resultMap="envelopeResultMap" parameterType="map">
        SELECT 
            id,
            message_id,
            message_type,
            related_message_id,
            related_path,
            sender_id,
            sender_name,
            receiver_id,
            receiver_name,
            receive_state,
            send_state,
            is_schedule,
            is_read_receipt,
            has_receipt,
            send_type,
            receiver_type,
            send_level,
            send_time,
            read_time,
            create_time,
            update_time,
            remark
        FROM MC_ENVELOPE
        <where>
        	<if test="messageType != null and messageType != '' ">
			 	message_type = '${messageType}'
			</if>
			<if test="receiverId != null and receiverId != '' ">
			 	and receiver_id = '${receiverId}'
			</if>
			<if test="senderId != null and senderId != '' ">
			 	and sender_id = '${senderId}'
			</if>
			<if test="senderName != null and senderName != '' ">
				AND SENDER_NAME = '${senderName}'
			</if>
			<if test="isSended != null and isSended != '' ">
				AND SEND_STATE = '${isSended}'
			</if>
			<if test="isRead != null and isRead != '' 
				and isNotRead != null and isNotRead != '' ">
				AND (RECEIVE_STATE = '${isRead}' OR RECEIVE_STATE = '${isNotRead}')
			</if>
			<if test="isNotSended != null and isNotSended != '' ">
				AND SEND_STATE = '${isNotSended}'
			</if>
        </where>
        <if test="groupfield != null">
        	GROUP BY MESSAGE_ID
        </if>
        <if test="orderfield != null" >
         order by 
        	<choose>    
                <when test="orderfield == 'senderId'">    
                    sender_id ${orderdir} 
                </when>  
                 <when test="orderfield == 'receiverId'">    
                    receiver_id ${orderdir} 
                </when>  
                <otherwise> 
               		send_time ${orderdir}   
                </otherwise>    
            </choose>    
        </if>
    </select>
	
	<select id="getByParams" parameterType="map" resultMap="envelopeResultMap">
		select
        e.message_id,
        e.message_type,
        e.related_message_id,
        e.related_path,
        e.sender_id,
        e.sender_name,
        e.receiver_id,
        e.receiver_name,
        e.receive_state,
        e.send_state,
        e.is_schedule,
        e.is_read_receipt,
        e.has_receipt,
        e.send_type,
        e.receiver_type,
        e.send_level,
        e.send_time,
        e.read_time,
        e.create_time,
        e.update_time,
		m.id,
		m.message_level,
		m.message_topic,
		m.message_content,
		m.remark
		from mc_envelope as e,mc_message as m
		<where>
			e.message_id=m.id
			<if test="senderId != null and senderId != '' ">
			 	and e.sender_Id like '%${senderId}%'
			</if>
			<if test="receiverId != null and receiverId != '' ">
			 	and e.receiver_Id like '%${receiverId}%'
			</if>
			<if test="senderName != null and senderName != '' ">
			 	and e.sender_Name like '%${senderName}%'
			</if>
			<if test="receiverName != null and receiverName != '' ">
			 	and e.receiver_Name like '%${receiverName}%'
			</if>
			<if test="sendState != null and sendState != '' ">
				and e.send_State like '%${sendState}%'
			</if>
			<if test="messageType != null and messageType != '' ">
				and e.message_Type = '${messageType}'
			</if>
			<if test="messageTopic != null and messageTopic != '' ">
				and m.message_topic like '%${messageTopic}%'
			</if>
			<if test="isSended != null and isSended != '' ">
				AND e.SEND_STATE = '${isSended}'
			</if>
			<if test="isRead != null and isRead != '' 
				and isNotRead != null and isNotRead != '' ">
				AND (e.RECEIVE_STATE = '${isRead}' OR e.RECEIVE_STATE = '${isNotRead}')
			</if>
			<if test="isNotSended != null and isNotSended != '' ">
				AND e.SEND_STATE = '${isNotSended}'
			</if>
			<if test="sendTimeFrom != null and sendTimeFrom != '' 
					and sendTimeTo != null and sendTimeTo != '' ">
				and e.create_time between '${sendTimeFrom}' and '${sendTimeTo}'
			</if>
		</where>
		<if test="groupfield != null">
        	GROUP BY MESSAGE_ID
        </if>
	</select>
	
	<select id="getMessageId" parameterType="string" resultType="string">
		select message_id from mc_envelope where id = #{id}
	</select>
	
	<update id="changeState" parameterType="string">
		update mc_envelope 
		<set>
			<if test="boxType == 'draftbox'.toString() or boxType == 'outbox'.toString() ">
				send_state = '2'
			</if>
			<if test="boxType == 'inbox'.toString() ">
				receive_state = '2'
			</if>
		</set>
		<where>
			id = '${id}'
		</where>
	</update>

</mapper>